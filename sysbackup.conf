<?php /* -*- mode: php; mode: mmm; coding: utf-8-unix; -*- */
/**
 *
 * Simple System Backup Configuration File
 *
 * <b>WARNING</b>
 *
 * <p>Backups are meaningless on their own. <b>What you really want s
 * a BACKUP, RESTORE and TEST PROCEDURE</b>.
 *
 * <p>I wrote this software for me and for my servers. I tend to
 * implement the same logic and follow the same procedures on all the
 * systems that I touch. The software that you see here works very
 * well for me - but it might not work so well for you! Your results
 * will depend on how you do things.
 *
 * <p>Do not rely on the default settings in this configuration
 * file. They will work - you will get some backup files - but you may
 * not have what you need to restore the server in the event of a
 * disaster.
 *
 * <p><b>Introduction</b>
 *
 * <p>This PHP script provides the basic configuration information
 * needed by the BNT Simple Backup script.
 * 
 * <p><b>Installation</b>
 *
 * <ul>
 *
 * <li>Copy this file to /etc/sysbackup/sysbackup.conf and edit it to
 * suit your needs.
 *
 * <li>Setup a cron job to run the sysbackup script every night. 
 *
 * <li>If you plan to use the SSH backup to a remote server inside a
 * secure network you will want to create a chrooted user account (on
 * the remote server) and install a password-less key pair. A useful
 * reference for this can be found here:
 *
 * {@link http://www.fuschlberger.net/programs/ssh-scp-sftp-chroot-jail/}
 *
 * </ul>
 *
 * <p><b>History</b>
 *
 * This file started out as a bash script called /etc/backups.conf.
 *
 * <p><b>Copyright</b>
 *
 * <p>Copyright (c) 2001-2011 by Sam Azer, All Rights Reserved.
 *
 * <p>This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * <p>This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * <p>You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 *
 * @author Sam Azer <sam@azertech.net>
 * @version 2.00 (alpha)
 * @package server-maint
 * @subpackage sysbackup
 * @license http://www.gnu.org/licenses/agpl.html AGPL
 * @copyright 2002-2011 by Sam Azer, All rights reserved
 * @link http://www.azertech.net/
 * @link http://www.samazer.net/about
 *
 *
 */




$this->app_confdir       = "/etc/sysbackup/conf.d/";
$this->app_plugindir     = "/etc/sysbackup/plugin.d/";

$this->admin_email       = "sysbackup@azertech.net";

/**
 *
 * Desired timezone (used to generate the backup set name)
 *
 * See: http://www.php.net/manual/en/timezones.php
 *
 */
$this->sys_timezone      = "America/Montreal";


/**
 *
 * The format to pass to the date() function to generate the backupset
 * name. Embed %HOST% (ie: \%\H\O\S\T\%) to get the current system
 * host name into the backupset name. This can be helpful when
 * backupsets are being manually copied.
 *
 */
$this->sys_backupnamefmt  = "\%\H\O\S\T\%\-Ymd";


/**
 *
 * The local host name to be used when assembling directory names
 *
 */
$this->sys_hostname      = trim( `hostname --long` );


/**
 *
 * Do we want a full copy of the backup to be saved on the local filesystem?
 *
 */
$this->sys_keeplocal     = true;


/**
 *
 * Do we want to make use of hardlinks between different backupsets?
 *
 * The current backup (being generated) should be on the same
 * partition as the backup that was generated by the most recent
 * successful backup run. (This software makes this assumption.) If
 * that's the case - ie: if the most recent successful run can still
 * be found on the same partition - it makes sense to use hardlinks
 * for identical files so as to save disk space. 
 *
 * Obviously this won't work if Keep Local is off or if there's a
 * separate script that moves the most recent backup off to another
 * partition.
 *
 */
$this->sys_usehardlinks  = true;


/**
 *
 * The log file name
 *
 */
$this->logfn( "/var/log/sysbackup.log" );



/**
 *
 * The path to the backup folder (usually the daily rotation) on the
 * local file system. This folder must have sys_minbackupsize bytes
 * free to locally store a full backup (if backups are being stored
 * locally.)
 *
 */
$this->sys_pathbackups   = "/home/sysbackup/{$this->sys_hostname}/daily/";

/**
 *
 * The path to the backupset rotations folder on the local file
 * system. Note that rotations are written much faster if this folder
 * is on the same partition as the main backup directory.
 *
 */
$this->sys_pathrotations = "/home/sysbackup/{$this->sys_hostname}/";

/**
 *
 * The path to the temp files folder on the local file system. This
 * folder must have enough free space (sys_minfreespace) to hold the
 * largest single tarball that might be generated during the backup
 * process. Note that the backup process is much faster if this temp
 * folder is on the same partition as the main backup directory.
 *
 */
$this->sys_pathtemp      = "/home/sysbackup/temp/";

/**
 *
 * The device name on which the root backup directory resides on the
 * local server. This information is used to report the total amount
 * of free space remaining after the backup is completed.
 *
 * (NB: as of v3.01 this information is not being used)
 *
 */
$this->sys_storedev      = "/dev/vdb";

/**
 *
 * The minimum amount of free space required to process a backup
 *
 * Specify the number of bytes to check for, the minimum amount of
 * space required, before starting a backup operation. If the system
 * doesn't have this much storage available on the target device the
 * nightly-backup script will not try to backup anything - it will
 * simply quit. 
 *
 * <p>If the local filesystem contains the minimum backup space this
 * script will attempt to execute the various steps in the backup
 * process.
 *
 * <p>The minimum backup space required is slightly larger than the
 * maximum amount of file space needed by any one step in the backup
 * process. Note also that any other processes in the system that
 * might need the same filesystem must be given the space they need
 * to operate during the backup process.
 *
 * <p>Use a value of zero to disable this test. After completing the
 * first full backup it should be possible to review the files in the
 * backup and estimate a suitable value to use here.
 *
 */
$this->sys_minfreespace  = 0 * 1024 * 1024 * 1024;


/**
 *
 * The minimum amount of free space required to save a full copy of
 * the backup
 *
 * <p>A local daily backup will be made if the filesystem contains the
 * amount of space specified in the minimum backup size constant.
 *
 * <p>The backup process will execute even if the local filesystem does
 * not contain this much available space. However, the full backup
 * will not be saved locally in this case. The backup will be written
 * to the remote server filesystem if there is enough space there.
 *
 * <p>If neither the local or remote filespaces have the minimum required
 * free space the backup script will simply exit without making a
 * backup.
 *
 * <p>Use a value of zero to disable this test. After completing the
 * first full backup it should be possible to review the files in the
 * backup and estimate a suitable value to use here.
 *
 */
$this->sys_minbackupsize = 0 * 1024 * 1024 * 1024;


$this->add_remote( "dom0", new backupvfs_sshremote_c( $this, array(
   "enabled"               => false,
   "remote_server"         => "dom0.azertech.net",
   "remconf_file"          => "/etc/sysbackup-nas.conf",
   "usehardlinks"          => true,
   "ssh_localexec_keypath" => "/etc/sysbackup/keys/localexec",
   "ssh_localexec_userid"  => "sysbackup",
   "scp_filecopy_keypath"  => "/etc/sysbackup/keys/filecopy",
   "scp_filecopy_userid"   => "sysbackup",
                                                                  )));



$this->add_remote( "nas", new backupvfs_sshremote_c( $this, array(
   "enabled"               => false,
   "remote_server"         => "nas.azertech.net",
   "remconf_file"          => "/etc/sysbackup-nas.conf",
   "usehardlinks"          => true,
   "ssh_localexec_keypath" => "/etc/sysbackup/keys/localexec",
   "ssh_localexec_userid"  => "sysbackup",
   "scp_filecopy_keypath"  => "/etc/sysbackup/keys/filecopy",
   "scp_filecopy_userid"   => "sysbackup",
                                                                  )));



$this->setup_compression( array( 

   "tar_name"     => "tar",
   "tar_bin"      => "/bin/tar",
   "tar_ext"      => ".tgz",

   "tar_defopts"  => "--preserve-order --preserve-permissions --atime-preserve=system",
   "tar_opts1"    => "",
   "tar_opts2"    => "",
   "tar_opts3"    => "",

   "tar_cmd"      => "%BINARY% %DEFOPTS% %OPTS1% --create %OPTS2% '%SOURCE%' %OPTS3%",

   "gzip_name"    => "gzip",
   "gzip_bin"     => "/bin/gzip",
   "gzip_ext"     => ".gz",

   "gzip_defopts" => "--no-name",
   "gzip_opts1"   => "",

   "gzip_filter"  => "%BINARY% %DEFOPTS% %OPTS1%             >'%TARGET%'",
   "gzip_file"    => "%BINARY% %DEFOPTS% %OPTS1% <'%SOURCE%' >'%TARGET%'",

                                 ));


