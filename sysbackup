#!/usr/bin/php
<?php /* -*- mode: php; mode: mmm; coding: utf-8-unix; -*- */
/**
 *
 * System Backup utility
 *
 * <p>-------------------------------------------------------------------
 * 
 * <p><b>GENERAL NOTES</b>
 *
 * <p>The current code has been completely re-organized and is no
 * longer compatible with the code in sysbackup-v3015a or prior
 * versions. Please note that this is still alpha quality code (ie:
 * it's not feature complete) and there's a chance that there might be
 * some more changes. Specifically any plugins that were written
 * during the past month or so might have to be updated and your
 * /etc/sysbackup/sysbackup.conf file will need to be edited with
 * care. Finally the /etc/sysbackup-nas.conf file on your remote NAS
 * server needs some minor editing.
 *
 * <p><b>Redhat/Fedora distros</b>
 *
 * <p>PHP on Redhat (and also on Ubuntu) is distributed as a large
 * number of small packages. At this time I do not have a list of the
 * packages required to run sysbackup. If you get strange error
 * messages about functions not found it's a safe bet that you need to
 * install a PHP package. Note also that this code has been tested on
 * fairly recent versions of PHP5 and probably won't work on anything
 * less than v5.3.
 *
 * <p><b>Time Zone setting</b>
 *
 * <p>If you forget to set your local time zone in your PHP ini file
 * you will get a warning from PHP. Unfortunately this warning
 * prevents the remote exec / local exec tools from functioning
 * correctly. The code has been updated to look in the INI file for a
 * setting and, if none is found, use New York (Eastern Standard Time)
 * by default. This avoids the warning message but might result in
 * incorrect times being logged.
 *
 * <p><b>Log Files</b>
 *
 * <p>If you sudo touch /var/log/remote-exec.log and sudo chmod 666
 * /var/log/remote-exec.log you will be able to check the log file for
 * usage and error messages. Otherwise logging is disabled. Don't
 * forget to update your logrotate settings if you use this feature.
 *
 * <p><b>ABOUT PHPDocumentor</b>
 *
 * Please note that PHP Documentor will not parse many of the files
 * in this package unless it has been patched. For information on how
 * to make the necessary changes see the FAQ:
 * 
 * PhpDocumentor 'not a PHP file' issues
 * 
 * in the FAQ section on AzerTech.net
 * under Software Development
 * http://www.azertech.net/content/view/53/29/
 * 
 * <p>-------------------------------------------------------------------
 * 
 * <p><b>Original Goals:</b>
 *
 * <p>The basic goal of this script has always been to take a picture
 * of the server every night - in a way that makes it easy to find any
 * file that might be needed. In addition this picture must be
 * complete enough that it can be used to build a new server in the
 * event of a disaster or during migration. Not surprisingly it often
 * happens that equipment upgrades are usually scheduled to occur more
 * frequently than disasters!
 *
 * <p>To make this possible it must be easy for the system admin to
 * list all the items that need to be backed-up. The script should be
 * smart enough to check if the item exists on the current server and
 * make a backup of it - or not bother if it doesn't exist. This is
 * because there may be more than one server with similar but not
 * identical configuration. To save time the backup script must be
 * smart enough to live in one repo but run on the various similar
 * servers.
 * 
 * <p>The backups should be saved in a rotation on the current
 * server. The script must also be able to save a rotation on one or
 * more remote servers. There should be separate daily, weekly and
 * monthly rotations to ensure that long term backups are readily
 * available (long term rotations are often helpful in cases where a
 * problem causes damage that is not readily apparent.)
 *
 * <p>If two tar files are identical between backups the script should
 * be able to detect the situation and replace the second copy with a
 * hard link to the previous identical copy.
 *
 * <p><b>Current Status</b>
 *
 * <p><b>GOOD</b>
 *
 *    <ul>
 *
 *    <li>Modular design of v3 is a huge benefit: Plugins are easy to
 *    write and backup jobs are easy to configure. Most needs can be
 *    met by creating a simple job configuration script that calls on
 *    the various plugins to do the work. In practice there won't be
 *    much need to write new plugins.
 *
 *    <li>
 *
 *    <li>
 *
 *    <li>
 *
 *    <li>
 *
 *    </ul>
 *
 * <p><b>BAD</b>
 *
 *    <ul>
 *
 *    <li>This is a total re-write so the code will need to be
 *    reviewed a few more times. Performance and usability issues will
 *    need to be reviewed also (especially since many features are
 *    missing at the time of this writing; ie: the ability to specify
 *    different configuration files in the command line.) In spite of
 *    all the recent testing there is no doubt that more bugs will be
 *    found.
 *
 *    <li>Many of the sanity checks in v2 are not included in v3
 *    because of the modular design. The local VFS code, for example,
 *    doesn't check to see if there's a remote system configured or
 *    not. So if there's no available local disk space the local VFS
 *    doesn't try to perform the backup in remote-only mode as it did
 *    in v2 (at the time of this writing. It may be possible to set
 *    the keeplocal flag to false for each VFS object that finds it
 *    does not have enough space - then the application can test for
 *    any VFS objects that are working and error out if none are
 *    available.)
 *
 *    <li>Error handling code for this initial implementation doesn't
 *    send emails or try to complete the backup in cases where
 *    problems are detected. Most detected problems simply result in a
 *    fatal error.
 *
 *    <li>
 *
 *    <li>
 *
 *    </ul>
 *
 * <p><b>UGLY</b>
 *
 *    <ul>
 *
 *    <li>Lots of command line options needed but little time to add
 *    them. It's hard (not currently possible) to change the behavior
 *    of a backup run on the fly. At the moment it is necessary to
 *    edit the job configuration to change the backup behaviour.
 *
 *    <li>The use of named parameters passed as $option arrays to
 *    methods and their parents simplifies much of the code - but
 *    makes it difficult to detect errors. The new named parameters
 *    class helps quite a bit but the issues are not fully resolved.
 *
 *    <li>The code makes little effort to manage spaces, quotes and
 *    double-quotes inside tarball file names. The code to manage this
 *    issue has been improved dramatically since this note was first
 *    written but the support for spaces in the backupset file and
 *    folder names has not been tested. Note that this problem affects
 *    only files generated by the backup software. The files and
 *    folders being backed-up have no name restrictions of any kind.
 *
 *    <li>
 *
 *    </ul>
 *
 * <p><b>Installation</b>
 *
 * <p>See the INSTALL and sysbackup.conf files for help with
 * installation.
 *
 * <p><b>Verification</b>
 *
 * <p>From time to time it is important to verify that everything is
 * actually working as expected. Several steps must be performed to
 * ensure that the verification is valid.
 *
 * <p>See the BE-PREPARED.html file to get started with disaster recovery planning.
 *
 * <p><b>FAQ</b>
 *
 * <p><b>What's the difference between a warning and a fatal error
 * here?</b> 
 *
 * <p>Answer: There are two answers to this question: 
 *
 * <p>(1) You will often see a few warnings that contain informat
 *        about an error. These are often followed by a fatal
 *        error. The entire message is actually a fatal error but the
 *        warning method is called for the information and the fatal
 *        method is called at the end with the final error
 *        message. This is a coding issue (fatal stops the program
 *        execution and so can only be used once at the end.)
 *
 * <p>(2) In principal the backup app must stop for configuration
 *        errors and sanity check errors. If there's something strange
 *        going on we assume that the system is either not configured
 *        properly or there's something seriously wrong that must be
 *        corrected before the backup system is allowed to run - so
 *        stop and let the admin fix it before trying again. Warnings
 *        are for problems that do not prevent the completion of the
 *        backup. 
 *
 *        In practice it's not always easy to decide between the two
 *        when writing the code. After the code has been written there
 *        are problems that the admin might start to want to see as
 *        warnings instead of fatal errors and vice-versa.
 *
 * <p><b>History</b>
 *
 * <p>This file started out as a super simple bash script called
 * /etc/cron.daily/daily.sh on a dev server used by Sam Azer. It is
 * supposed to be short and straight-forward but circumstances cause
 * it to grow a little from time to time. It has been used on BNT
 * servers and servers belonging to various customers.
 *
 * <p>The code was first published in the Bell Integrator Build & Run
 * server maintenance manual in 2002. The ability to write nightly
 * backups to an off-site server was added a few years later.
 * 
 * <p>The rewrite as a PHP script was prompted by the complexity of
 * the daily.sh script running on mail2.bnt.ca. There are too many
 * operations being performed in that script (including general server
 * status and anti-spam reporting.) It became obvious that it would
 * be necessary to separate the anti-spam code from the backup code
 * and add some minor improvements along the way. Offsite backups, for
 * example, are not being rotated by daily.sh and the use of
 * hard-links to save disk space had been planned for years but never
 * implemented.
 *
 * <p>The current re-write implements a light-weight plug-in
 * architecture to allow the various blocks of code to be separated
 * from the basic backup procedure.
 *
 * <p><b>Copyright</b>
 *
 * <p>Copyright (c) 2001-2011 by Sam Azer, All Rights Reserved.
 *
 * <p>This program is free software: you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * <p>This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * <p>You should have received a copy of the GNU Affero General Public
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/>
 *
 * @author Sam Azer <sam@azertech.net>
 * @version 3.01 (alpha)
 * @package sysbackup
 * @subpackage sysbackup
 * @license http://www.gnu.org/licenses/agpl.html AGPL
 * @copyright 2001-2011 by Sam Azer, All rights reserved
 * @link http://www.azertech.net/
 * @link http://www.samazer.net/about
 *
 */


define( "PLUGGABLEAPP_TITLE",      "System Backups"                   );
define( "PLUGGABLEAPP_VERSION",    "3.01(alpha)"                      );
define( "PLUGGABLEAPP_CONF",       "/etc/sysbackup/sysbackup.conf"    );
define( "PLUGGABLEAPP_CONF_D",     "/etc/sysbackup/conf.d/"           );
define( "PLUGGABLEAPP_PLUGIN_D",   "/usr/share/sysbackup/plugin.d/"   );

define( "PLUGGABLEAPP_ADMINEMAIL", "root@localhost"                   );

/**
 *
 * Name of the configuration file on a NAS server
 *
 */
define( "SSHREMOTE_CONF", "/etc/sysbackup-nas.conf" );


/**
 *
 * Backup output capture
 *
 */
define( "EXT_OUTPUTCAPTURE", ".out" );


/**
 *
 * Hashlist File Extension 
 *
 */
define( "EXT_HASHLIST", ".hashlist" );


/**
 *
 * Extension for the list of hardlinked Files
 *
 */
define( "EXT_HARDLINKED", ".hardlinked" );

/**
 *
 * The extension of the file containing the name of the current successful backup
 *
 */
define( "EXT_BACKUP_LAST", ".last" );


/**
 *
 * The extension of the file containing the name of the previous successful backup
 *
 */
define( "EXT_BACKUP_PREV", ".prev" );


// use a default TZ if none specified in the INI file to avoid a
// warning from PHP5. The timezone setting will be corrected when the
// configuration file is loaded.
if ( ini_get('date.timezone') == "" )
   date_default_timezone_set('America/New_York');


set_include_path( realpath(dirname($argv[0])) . ":" . get_include_path() );
include "app/sysbackup.inc";


$sysbackup = new system_backup_app_c();

try
{
   // buffer a dash into the log file to separate 
   // the output from different runs
   $sysbackup->log( "-" );

   // run main() to get everything done
   $sysbackup->main();

   // log the return from main()
   $sysbackup->log( "[done]" );
}
  catch( Exception $e )
{
   $msg = $e->getMessage();
   $msg = "Caught exception: {$msg}\n";
   $sysbackup->log( $msg );
   $sysbackup->tee( $msg );
   $sysbackup->log( "[stopped]" );
}


