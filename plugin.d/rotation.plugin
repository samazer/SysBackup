<?php /* -*- mode: php; mode: mmm; coding: utf-8-unix; -*- */
/**
 *
 * Rotation Plugin
 *
 *
 * <p><b>Copyright</b>
 *
 * <p>Copyright (c) 2011 by Sam Azer, All Rights Reserved.
 *
 * <p>This program is free software: you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * <p>This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * <p>You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 *
 * @author Sam Azer <sam@azertech.net>
 * @version 0.01 (alpha)
 * @package server-maint
 * @subpackage sysbackup
 * @license http://www.gnu.org/licenses/agpl.html AGPL
 * @copyright 2011 by Sam Azer, All rights reserved
 * @link http://www.azertech.net/
 * @link http://www.samazer.net/about
 *
 */


//require_once "lib/general-plugins.inc";


/**
 *
 * The day of the week on which to execute the weekly rotation
 *
 * The day of the week is compared against the numeric value provided
 * by the PHP getdate() function. 0=Sunday, 1=Monday, ... 6=Saturday.
 *
 * @link http://ca.php.net/manual/en/function.getdate.php getdate()
 *
 */
define( "WEEKLY_ROTATION_DAY",                                0 );

/**
 *
 * The day of the month on which to execute the monthly rotation
 *
 * You can put an expression here to calculate the last day of each
 * month but the backup is usually done in the early morning (ie: 1am
 * through 5am,) so executing the backup on the first of the month
 * usually has the effect of backing-up the data from the last working
 * day of the month.
 *
 */
define( "MONTHLY_ROTATION_DAY",                               1 );

/**
 *
 * The total number of daily backups to keep in rotation on the local server
 *
 */
define( "TOTAL_BCKLOC_DAILY",                                 7 );


/**
 *
 * The total number of weekly backups to keep in rotation on the local server
 *
 */
define( "TOTAL_BCKLOC_WEEKLY",                               12 );


/**
 *
 * The total number of monthly backups to keep in rotation on the local server
 *
 */
define( "TOTAL_BCKLOC_MONTHLY",                               6 );


/**
 *
 * The total number of daily backups to keep in rotation on the remote server
 *
 */
define( "TOTAL_BCKREM_DAILY",                                 7 );


/**
 *
 * The total number of weekly backups to keep in rotation on the remote server
 *
 */
define( "TOTAL_BCKREM_WEEKLY",                               12 );


/**
 *
 * The total number of monthly backups to keep in rotation on the remote server
 *
 */
define( "TOTAL_BCKREM_MONTHLY",                               6 );


class backup_rotation_plugin_c extends plugin_base_c
{


   function __construct( &$application_object )
   {
      parent::__construct( $application_object );

      $this->plugin_name        = "rotation";
      $this->plugin_title       = "Backup Rotation";
      $this->plugin_version     = "0.01a";
      $this->plugin_description = "plugin to keep a rotation of daily, weekly and monthly backups";
      $this->plugin_enabled     = false;
   }
}


$this->add_plugin( new backup_rotation_plugin_c( $this ) );

